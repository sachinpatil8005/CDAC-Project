{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final_Project\\\\TravelGo\\\\TravelGo\\\\Travelgo-front-end\\\\src\\\\components\\\\TravellerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { IconButton, Menu, MenuItem } from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport logo from '../Travel.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TravellerPage() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    logid,\n    name\n  } = location.state;\n  // console.log(logid);\n\n  const [propertyList, setPropertyList] = useState([]);\n  const [searchCity, setSearchCity] = useState('');\n  const [filteredPropertyList, setFilteredPropertyList] = useState([]);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedDates, setSelectedDates] = useState({});\n  const [bookingProperty, setBookingProperty] = useState(null);\n  const [bookingData, setBookingData] = useState([]);\n  const [profileData, setProfileData] = useState(null);\n  const fetchProfileData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/getloggedTraveller?id=\" + logid);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.name);\n        setProfileData(data);\n      } else {\n        console.log('Failed to fetch profile data');\n      }\n    } catch (error) {\n      console.error('Error fetching profile data:', error);\n    }\n  };\n  const fetchPropertyListing = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/getallprops');\n      if (response.ok) {\n        const data = await response.json();\n        setPropertyList(data);\n        setFilteredPropertyList(data);\n      } else {\n        console.log('Failed to fetch property listing');\n      }\n    } catch (error) {\n      console.error('Error fetching property listing:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPropertyListing();\n    fetchProfileData();\n  }, []);\n  const handleSearch = () => {\n    if (searchCity.trim() === '') {\n      setFilteredPropertyList(propertyList);\n    } else {\n      const filteredList = propertyList.filter(property => property.city.toLowerCase() === searchCity.toLowerCase());\n      setFilteredPropertyList(filteredList);\n    }\n  };\n  const handleProfileIconClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleProfileMenuClose = menuItem => {\n    setAnchorEl(null);\n    if (menuItem === 'My Booking') {\n      fetchBookingData();\n    }\n  };\n  const handleLogout = () => {\n    navigate('/');\n  };\n  const handleBookProperty = property => {\n    setBookingProperty(property);\n  };\n  const handleDateChange = (date, propertyId) => {\n    setSelectedDates(prevDates => ({\n      ...prevDates,\n      [propertyId]: date\n    }));\n  };\n  const handleConfirmBooking = async () => {\n    if (!bookingProperty || !selectedDates[bookingProperty.id_property]) {\n      console.log('Select a property and date before confirming booking.');\n      return;\n    }\n    const checkinDate = selectedDates[bookingProperty.id_property];\n    const checkoutDate = calculateCheckoutDate(checkinDate);\n    const traveller_id = profileData.id_traveller;\n    const property_id = bookingProperty.id_property;\n    navigate('/propDetails', {\n      state: {\n        property_id,\n        traveller_id,\n        checkinDate,\n        checkoutDate,\n        logid,\n        name\n      }\n    });\n    // try {\n    //   const response = await fetch('http://localhost:8080/savebooking', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify({\n    //       prop_id: bookingProperty.id_property,\n    //       travel_id: profileData.id_traveller, // Assuming logid is the travel_id of the user\n    //       checkin: checkinDate,\n    //       checkout: checkoutDate,\n    //       totalfare: 100000,\n    //       pay_mode:\"online\",\n    //       amount:1000\n    //     }),\n    //   });\n\n    //   if (response.ok) {\n    //     console.log('Booking request sent successfully.');\n    //     // Reset selected dates and booking property\n    //     setSelectedDates({});\n    //     setBookingProperty(null);\n    //     window.location.reload();\n    //   } else {\n    //     console.log('Failed to send booking request.');\n    //   }\n    // } catch (error) {\n    //   console.error('Error sending booking request:', error);\n    // }\n  };\n\n  // Function to calculate the check-out date (you can adjust the logic as needed)\n  const calculateCheckoutDate = checkinDate => {\n    const checkin = new Date(checkinDate);\n    const checkout = new Date(checkin);\n    checkout.setDate(checkout.getDate() + 1); // Assuming one-day stay\n    return checkout.toISOString().split('T')[0]; // Format as \"YYYY-MM-DD\"\n  };\n\n  const fetchBookingData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/getbookingbytrveller?t=\" + profileData.id_traveller);\n      if (response.ok) {\n        const data = await response.json();\n        setBookingData(data);\n      } else {\n        console.log('Failed to fetch booking data');\n      }\n    } catch (error) {\n      console.error('Error fetching booking data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"navbar-brand\",\n          href: \"#\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"rounded\",\n            src: logo,\n            alt: \"Logo\",\n            height: \"70\",\n            style: {\n              marginTop: '-1px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control rounded-pill\",\n            placeholder: \"Where are you going?\",\n            value: searchCity,\n            onChange: e => setSearchCity(e.target.value),\n            style: {\n              width: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-append\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary rounded-pill\",\n              type: \"button\",\n              onClick: handleSearch,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-controls\": \"profile-menu\",\n          \"aria-haspopup\": \"true\",\n          style: {\n            color: 'black'\n          },\n          onClick: handleProfileIconClick,\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"profile-menu\",\n          anchorEl: anchorEl,\n          keepMounted: true,\n          open: Boolean(anchorEl),\n          onClose: handleProfileMenuClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleProfileMenuClose,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => handleProfileMenuClose('My Booking'),\n            children: \"My Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: filteredPropertyList.map(property => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/jpeg;base64,${property.pictures}`,\n              className: \"card-img-top\",\n              alt: property.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: property.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"State: \", property.state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"City: \", property.city]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Price: \", property.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), property === bookingProperty ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  onChange: e => handleDateChange(e.target.value, property.id_property)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary mt-2\",\n                  onClick: handleConfirmBooking,\n                  children: \"Confirm Booking\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary rounded-circle\",\n                onClick: () => handleBookProperty(property),\n                children: \"Book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)\n        }, property.id_property, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Property ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Check-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Check-out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Fare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: bookingData.map(booking => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: booking.prop_id.id_property\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: booking.checkin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: booking.checkout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: booking.totalfare\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, booking.id_booking, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 3\n  }, this);\n}\n_s(TravellerPage, \"eYbY9Nv8fq+6fUBiAFbaqGzl5dI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TravellerPage;\nexport default TravellerPage;\nvar _c;\n$RefreshReg$(_c, \"TravellerPage\");","map":{"version":3,"names":["React","useState","useEffect","IconButton","Menu","MenuItem","AccountCircleIcon","useLocation","useNavigate","logo","jsxDEV","_jsxDEV","TravellerPage","_s","navigate","location","logid","name","state","propertyList","setPropertyList","searchCity","setSearchCity","filteredPropertyList","setFilteredPropertyList","anchorEl","setAnchorEl","selectedDates","setSelectedDates","bookingProperty","setBookingProperty","bookingData","setBookingData","profileData","setProfileData","fetchProfileData","response","fetch","ok","data","json","console","log","error","fetchPropertyListing","handleSearch","trim","filteredList","filter","property","city","toLowerCase","handleProfileIconClick","event","currentTarget","handleProfileMenuClose","menuItem","fetchBookingData","handleLogout","handleBookProperty","handleDateChange","date","propertyId","prevDates","handleConfirmBooking","id_property","checkinDate","checkoutDate","calculateCheckoutDate","traveller_id","id_traveller","property_id","checkin","Date","checkout","setDate","getDate","toISOString","split","children","className","href","class","src","alt","height","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","width","onClick","color","id","keepMounted","open","Boolean","onClose","map","pictures","address","price","booking","prop_id","totalfare","id_booking","_c","$RefreshReg$"],"sources":["E:/Final_Project/TravelGo/TravelGo/Travelgo-front-end/src/components/TravellerPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { IconButton, Menu, MenuItem } from '@mui/material';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logo from '../Travel.svg'\r\n\r\nfunction TravellerPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const location = useLocation();\r\n  const { logid, name} = location.state;\r\n  // console.log(logid);\r\n\r\n  const [propertyList, setPropertyList] = useState([]);\r\n  const [searchCity, setSearchCity] = useState('');\r\n  const [filteredPropertyList, setFilteredPropertyList] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedDates, setSelectedDates] = useState({});\r\n  const [bookingProperty, setBookingProperty] = useState(null);\r\n  const [bookingData, setBookingData] = useState([]);\r\n  const [profileData, setProfileData] = useState(null);\r\n\r\n  \r\n\r\n\r\n  const fetchProfileData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/getloggedTraveller?id=\"+logid);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data.name);\r\n        setProfileData(data);\r\n      } else {\r\n        console.log('Failed to fetch profile data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching profile data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const fetchPropertyListing = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/getallprops');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPropertyList(data);\r\n        setFilteredPropertyList(data);\r\n      } else {\r\n        console.log('Failed to fetch property listing');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching property listing:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPropertyListing();\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  const handleSearch = () => {\r\n    if (searchCity.trim() === '') {\r\n      setFilteredPropertyList(propertyList);\r\n    } else {\r\n      const filteredList = propertyList.filter(property => property.city.toLowerCase() === searchCity.toLowerCase());\r\n      setFilteredPropertyList(filteredList);\r\n    }\r\n  };\r\n\r\n  const handleProfileIconClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileMenuClose = (menuItem) => {\r\n    setAnchorEl(null);\r\n    if (menuItem === 'My Booking') {\r\n      fetchBookingData();\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleBookProperty = property => {\r\n    setBookingProperty(property);\r\n  };\r\n\r\n  const handleDateChange = (date, propertyId) => {\r\n    setSelectedDates(prevDates => ({\r\n      ...prevDates,\r\n      [propertyId]: date,\r\n    }));\r\n  };\r\n\r\n  const handleConfirmBooking = async () => {\r\n    if (!bookingProperty || !selectedDates[bookingProperty.id_property]) {\r\n      console.log('Select a property and date before confirming booking.');\r\n      return;\r\n    }\r\n\r\n  \r\n    const checkinDate = selectedDates[bookingProperty.id_property];\r\n    const checkoutDate = calculateCheckoutDate(checkinDate);  \r\n    const traveller_id = profileData.id_traveller;\r\n    const property_id = bookingProperty.id_property;\r\n  \r\n    navigate('/propDetails', { state: { property_id, traveller_id, checkinDate, checkoutDate, logid, name} });\r\n    // try {\r\n    //   const response = await fetch('http://localhost:8080/savebooking', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //       'Content-Type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //       prop_id: bookingProperty.id_property,\r\n    //       travel_id: profileData.id_traveller, // Assuming logid is the travel_id of the user\r\n    //       checkin: checkinDate,\r\n    //       checkout: checkoutDate,\r\n    //       totalfare: 100000,\r\n    //       pay_mode:\"online\",\r\n    //       amount:1000\r\n    //     }),\r\n    //   });\r\n  \r\n    //   if (response.ok) {\r\n    //     console.log('Booking request sent successfully.');\r\n    //     // Reset selected dates and booking property\r\n    //     setSelectedDates({});\r\n    //     setBookingProperty(null);\r\n    //     window.location.reload();\r\n    //   } else {\r\n    //     console.log('Failed to send booking request.');\r\n    //   }\r\n    // } catch (error) {\r\n    //   console.error('Error sending booking request:', error);\r\n    // }\r\n  };\r\n\r\n  // Function to calculate the check-out date (you can adjust the logic as needed)\r\n  const calculateCheckoutDate = (checkinDate) => {\r\n  const checkin = new Date(checkinDate);\r\n  const checkout = new Date(checkin);\r\n  checkout.setDate(checkout.getDate() + 1); // Assuming one-day stay\r\n  return checkout.toISOString().split('T')[0]; // Format as \"YYYY-MM-DD\"\r\n  };\r\n\r\n  const fetchBookingData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/getbookingbytrveller?t=\"+profileData.id_traveller);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setBookingData(data);\r\n      } else {\r\n        console.log('Failed to fetch booking data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching booking data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-info\">\r\n\t  <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n          <img class=\"rounded\" src={logo} alt=\"Logo\" height=\"70\" style={{ marginTop: '-1px' }} />\r\n          </a>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control rounded-pill\"\r\n              placeholder=\"Where are you going?\"\r\n              value={searchCity}\r\n              onChange={(e) => setSearchCity(e.target.value)}\r\n              style={{ width: '200px' }}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-primary rounded-pill\" type=\"button\" onClick={handleSearch}>\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <IconButton\r\n            aria-controls=\"profile-menu\"\r\n            aria-haspopup=\"true\"\r\n            style={{ color: 'black' }}\r\n            onClick={handleProfileIconClick}\r\n          >\r\n            <AccountCircleIcon />\r\n\r\n          </IconButton>\r\n          <Menu\r\n            id=\"profile-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleProfileMenuClose}\r\n          >\r\n            <MenuItem onClick={handleProfileMenuClose}>{name}</MenuItem>\r\n            <MenuItem onClick={() => handleProfileMenuClose('My Booking')}>My Booking</MenuItem>\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n          </Menu>\r\n\r\n        </div>\r\n\r\n        {/* ... (the navigation bar code) */}\r\n      </nav>\r\n\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row\">\r\n          {filteredPropertyList.map(property => (\r\n            <div className=\"col-md-4 mb-4\" key={property.id_property}>\r\n              <div className=\"card\">\r\n                <img src={`data:image/jpeg;base64,${ property.pictures}`}  className=\"card-img-top\" alt={property.address} />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{property.address}</h5>\r\n                  <p className=\"card-text\">State: {property.state}</p>\r\n                  <p className=\"card-text\">City: {property.city}</p>\r\n                  <p className=\"card-text\">Price: {property.price}</p>\r\n                  {property === bookingProperty ? (\r\n                    <div>\r\n                      <input type=\"date\" onChange={e => handleDateChange(e.target.value, property.id_property)} />\r\n                      <button className=\"btn btn-primary mt-2\" onClick={handleConfirmBooking}>\r\n                        Confirm Booking\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <button className=\"btn btn-primary rounded-circle\" onClick={() => handleBookProperty(property)}>\r\n                      Book\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"container mt-4\">\r\n      <h2>My Booking</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Property ID</th>\r\n            <th>Check-in</th>\r\n            <th>Check-out</th>\r\n            <th>Total Fare</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {bookingData.map(booking => (\r\n            <tr key={booking.id_booking}>\r\n              <td>{booking.prop_id.id_property}</td>\r\n              <td>{booking.checkin}</td>\r\n              <td>{booking.checkout}</td>\r\n              <td>{booking.totalfare}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TravellerPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}